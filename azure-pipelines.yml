trigger:
  - master

jobs:
  - job: windows_latest
    timeoutInMinutes: 90
    pool:
      vmImage: windows-latest
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 16.x
        displayName: "Use node.js 16"
      - script: npm install -g yarn
        displayName: "Install yarn"
      - script: curl -L https://mirror.firedaemon.com/OpenSSL/openssl-1.1.1m.zip > openssl-1.1.1m.zip
        displayName: "download OpenSSL"
      - script: mkdir ./openssl-1.1.1m
        displayName "make openssl dir"
      - script: tar -xf openssl-1.1.1m.zip -C ./openssl-1.1.1m --strip-components=1
        displayName: "extract openssl"
      - script: yarn install --frozen-lockfile
        displayName: "yarn install"
        env: { OPENSSL_ROOT_DIR: $(System.DefaultWorkingDirectory)/openssl-1.1.1m4/x64 }
      - script: yarn prebuild:upload
        displayName: "upload pre-compiled binary"
        env: { GITHUB_TOKEN: $(GITHUB_TOKEN) }
  - job: ubuntu_latest
    timeoutInMinutes: 90
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 16.x
        displayName: "Use node.js 16"
      - script: npm install -g yarn
        displayName: "Install yarn"
      - script: yarn install --frozen-lockfile
        displayName: "yarn install"
      - script: yarn prebuild:upload
        displayName: "upload pre-compiled binary"
        env: { GITHUB_TOKEN: $(GITHUB_TOKEN) }
  - job: macOS_latest
    timeoutInMinutes: 90
    pool:
      vmImage: macOS-latest
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 16.x
        displayName: "Use node.js 16"
      - script: npm install -g yarn
        displayName: "Install yarn"
      - script: HOMEBREW_NO_AUTO_UPDATE=1 brew install openssl@3
        displayName: "Install openssl from homebrew"
      - script: yarn install --frozen-lockfile
        displayName: "yarn install"
        env:
          {
            OPENSSL_ROOT_DIR: "/usr/local/openssl",
            LDFLAGS: "-L/usr/local/opt/openssl@3/lib",
            CPPFLAGS: "-I/usr/local/opt/openssl@3/include",
            PKG_CONFIG_PATH: "/usr/local/opt/openssl@3/lib/pkgconfig",
          }
      - script: yarn prebuild:upload
        displayName: "upload pre-compiled binary"
        env: { GITHUB_TOKEN: $(GITHUB_TOKEN) }
